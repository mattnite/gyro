name: release artifacts
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag: ${{ steps.tag.outputs.tag }}
    steps:
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

  linux:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        arch: [x86_64, aarch64, i386]
    env:
      TARGET: gyro-${{ needs.create_release.outputs.tag }}-linux-${{ matrix.arch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v1.3.0
      with:
        version: master

    - run: mkdir ${{ env.TARGET }}

    - name: linux-${{ matrix.arch }}
      run: zig build  -Dtarget=${{ matrix.arch }}-linux-musl -Drelease-safe --prefix ${{ env.TARGET }}

    - name: Create Tarball
      run: tar -czvf ${{ env.TARGET }}.tar.gz ${{ env.TARGET }}

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./${{ env.TARGET }}.tar.gz
        asset_name: ${{ env.TARGET}}.tar.gz
        asset_content_type: application/tarball

  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    needs: create_release
    strategy:
      matrix:
        arch: [x86_64, i386]
    env:
      TARGET: gyro-${{ needs.create_release.outputs.tag }}-windows-${{ matrix.arch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v1.3.0
      with:
        version: master

    - run: sudo apt install zip
    - run: mkdir ${{ env.TARGET }}

    - name: windows-${{ matrix.arch }}
      run: zig build  -Dtarget=${{ matrix.arch }}-windows -Drelease-safe --prefix ${{ env.TARGET }}

    - name: Create zip
      run: zip -r ${{ env.TARGET }}.zip ${{ env.TARGET }} 

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./${{ env.TARGET }}.zip
        asset_name: ${{ env.TARGET }}.zip
        asset_content_type: application/zip

  macos:
    runs-on: macos-latest
    needs: create_release
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    env:
      TARGET: gyro-${{ needs.create_release.outputs.tag }}-macos-${{ matrix.arch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v1.3.0
      with:
        version: master

    - run: mkdir ${{ env.TARGET }}

    - name: macos-${{ matrix.arch }}
      run: zig build  -Drelease-safe --prefix ${{ env.TARGET }}

    - name: Create Tarball
      run: tar -czvf ${{ env.TARGET }}.tar.gz ${{ env.TARGET }}

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./${{ env.TARGET }}.tar.gz
        asset_name: ${{ env.TARGET }}.tar.gz
        asset_content_type: application/tarball
